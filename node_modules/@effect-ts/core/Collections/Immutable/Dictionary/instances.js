var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var instances_exports = {};
__export(instances_exports, {
  Compact: () => Compact,
  Compactable: () => Compactable,
  Covariant: () => Covariant,
  CovariantWithIndex: () => CovariantWithIndex,
  FoldMap: () => FoldMap,
  FoldMapWithIndex: () => FoldMapWithIndex,
  Foldable: () => Foldable,
  FoldableWithIndex: () => FoldableWithIndex,
  ForEach: () => ForEach,
  ForEachWithIndex: () => ForEachWithIndex,
  Reduce: () => Reduce,
  ReduceRight: () => ReduceRight,
  ReduceRightWithIndex: () => ReduceRightWithIndex,
  ReduceWithIndex: () => ReduceWithIndex,
  Separate: () => Separate,
  Wiltable: () => Wiltable,
  WiltableWithIndex: () => WiltableWithIndex,
  Witherable: () => Witherable,
  WitherableWithIndex: () => WitherableWithIndex
});
var P = __toESM(require("../../../Prelude/index.js"));
var import_operations = require("./operations.js");
const Covariant = {
  map: import_operations.map
};
const CovariantWithIndex = {
  mapWithIndex: import_operations.mapWithIndex
};
const ForEach = {
  map: import_operations.map,
  forEachF: import_operations.forEachF
};
const ForEachWithIndex = {
  map: import_operations.map,
  forEachWithIndexF: import_operations.forEachWithIndexF
};
const Reduce = {
  reduce: import_operations.reduce
};
const ReduceRight = {
  reduceRight: import_operations.reduceRight
};
const ReduceWithIndex = {
  reduceWithIndex: import_operations.reduceWithIndex
};
const ReduceRightWithIndex = {
  reduceRightWithIndex: import_operations.reduceRightWithIndex
};
const FoldMap = {
  foldMap: import_operations.foldMap
};
const FoldMapWithIndex = {
  foldMapWithIndex: import_operations.foldMapWithIndex
};
const Foldable = __spreadValues(__spreadValues(__spreadValues({}, FoldMap), Reduce), ReduceRight);
const FoldableWithIndex = __spreadValues(__spreadValues(__spreadValues({}, FoldMapWithIndex), ReduceWithIndex), ReduceRightWithIndex);
const Wiltable = {
  separateF: import_operations.separateF
};
const WiltableWithIndex = {
  separateWithIndexF: import_operations.separateWithIndexF
};
const Witherable = {
  compactF: import_operations.compactF
};
const WitherableWithIndex = {
  compactWithIndexF: import_operations.compactWithIndexF
};
const Compact = {
  compact: import_operations.compact
};
const Separate = {
  separate: import_operations.separate
};
const Compactable = __spreadValues(__spreadValues({}, Separate), Compact);
module.exports = __toCommonJS(instances_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Compact,
  Compactable,
  Covariant,
  CovariantWithIndex,
  FoldMap,
  FoldMapWithIndex,
  Foldable,
  FoldableWithIndex,
  ForEach,
  ForEachWithIndex,
  Reduce,
  ReduceRight,
  ReduceRightWithIndex,
  ReduceWithIndex,
  Separate,
  Wiltable,
  WiltableWithIndex,
  Witherable,
  WitherableWithIndex
});
