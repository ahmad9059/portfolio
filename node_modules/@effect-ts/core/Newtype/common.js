var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var common_exports = {};
__export(common_exports, {
  And: () => And,
  AndF: () => AndF,
  BooleanProd: () => BooleanProd,
  BooleanSum: () => BooleanSum,
  Failure: () => Failure,
  FailureIn: () => FailureIn,
  FailureOut: () => FailureOut,
  First: () => First,
  Last: () => Last,
  Max: () => Max,
  Min: () => Min,
  Or: () => Or,
  OrF: () => OrF,
  Prod: () => Prod,
  StringSum: () => StringSum,
  Sum: () => Sum
});
var import_newtype = require("./newtype.js");
const Sum = /* @__PURE__ */ (0, import_newtype.genericDef)("@newtype/Sum");
const Prod = /* @__PURE__ */ (0, import_newtype.genericDef)("@newtype/Prod");
const Or_ = /* @__PURE__ */ (0, import_newtype.typeDef)()("@newtype/Or");
const Or = /* @__PURE__ */ (0, import_newtype.newtype)()(Or_);
const And_ = /* @__PURE__ */ (0, import_newtype.typeDef)()("@newtype/And");
const And = /* @__PURE__ */ (0, import_newtype.newtype)()(And_);
const OrF = /* @__PURE__ */ (0, import_newtype.genericDef)("@newtype/OrF");
const AndF = /* @__PURE__ */ (0, import_newtype.genericDef)("@newtype/AndF");
const First = /* @__PURE__ */ (0, import_newtype.genericDef)("@newtype/First");
const Last = /* @__PURE__ */ (0, import_newtype.genericDef)("@newtype/Last");
const Min = /* @__PURE__ */ (0, import_newtype.genericDef)("@newtype/Min");
const Max = /* @__PURE__ */ (0, import_newtype.genericDef)("@newtype/Max");
const Failure = /* @__PURE__ */ (0, import_newtype.genericDef)("@newtype/Failure");
const FailureIn = /* @__PURE__ */ (0, import_newtype.genericDef)("@newtype/FailureIn");
const FailureOut = /* @__PURE__ */ (0, import_newtype.genericDef)("@newtype/FailureOut");
const BooleanProd = /* @__PURE__ */ Prod.of();
const BooleanSum = /* @__PURE__ */ Sum.of();
const StringSum = /* @__PURE__ */ Sum.of();
module.exports = __toCommonJS(common_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  And,
  AndF,
  BooleanProd,
  BooleanSum,
  Failure,
  FailureIn,
  FailureOut,
  First,
  Last,
  Max,
  Min,
  Or,
  OrF,
  Prod,
  StringSum,
  Sum
});
