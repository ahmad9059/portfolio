var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var gen_exports = {};
__export(gen_exports, {
  GenManaged: () => GenManaged,
  gen: () => gen
});
var import_fromEither = require("../../Effect/fromEither.js");
var import_getOrFail = require("../../Effect/getOrFail.js");
var import_Effect = require("../../Effect/index.js");
var import_Function = require("../../Function/index.js");
var import_Utils = require("../../Utils/index.js");
var import_core = require("../core.js");
var import_fromEffect = require("../fromEffect.js");
var import_managed = require("../managed.js");
var import_succeed = require("../succeed.js");
var import_suspend = require("./suspend.js");
class GenManaged {
  constructor(effect, trace) {
    this.effect = effect;
    this.trace = trace;
  }
  *[Symbol.iterator]() {
    return yield this;
  }
}
const adapter = (_, __, ___) => {
  if ((0, import_Utils.isTag)(_)) {
    return new GenManaged((0, import_fromEffect.fromEffect)((0, import_Effect.accessService)(_)(import_Function.identity)), __);
  }
  if ((0, import_Utils.isEither)(_)) {
    return new GenManaged((0, import_fromEffect.fromEffect)((0, import_fromEither.fromEither)(() => _)), __);
  }
  if ((0, import_Utils.isOption)(_)) {
    if (typeof __ === "function") {
      return new GenManaged(__ ? _._tag === "None" ? (0, import_core.fail)(__()) : (0, import_succeed.succeed)(_.value) : (0, import_fromEffect.fromEffect)((0, import_getOrFail.getOrFail)(_)), ___);
    }
    return new GenManaged((0, import_fromEffect.fromEffect)((0, import_getOrFail.getOrFail)(_)), __);
  }
  if (_ instanceof import_managed.ManagedImpl) {
    return new GenManaged(_, __);
  }
  return new GenManaged((0, import_fromEffect.fromEffect)(_), __);
};
function gen(f) {
  return (0, import_suspend.suspend)(() => {
    const iterator = f(adapter);
    const state = iterator.next();
    function run(state2) {
      if (state2.done) {
        return (0, import_succeed.succeed)(state2.value);
      }
      return (0, import_core.chain_)((0, import_suspend.suspend)(() => state2.value["effect"], state2.value.trace), (val) => {
        const next = iterator.next(val);
        return run(next);
      });
    }
    return run(state);
  });
}
module.exports = __toCommonJS(gen_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  GenManaged,
  gen
});
