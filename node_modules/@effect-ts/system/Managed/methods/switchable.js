var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var switchable_exports = {};
__export(switchable_exports, {
  switchable: () => switchable
});
var Tp = __toESM(require("../../Collections/Immutable/Tuple/index.js"));
var import_ExecutionStrategy = require("../../Effect/ExecutionStrategy.js");
var import_Function = require("../../Function/index.js");
var import_Option = require("../../Option/index.js");
var import_core = require("../core.js");
var T = __toESM(require("../deps.js"));
var Do = __toESM(require("../do.js"));
var addIfOpen = __toESM(require("../ReleaseMap/addIfOpen.js"));
var makeReleaseMap = __toESM(require("../ReleaseMap/makeReleaseMap.js"));
var releaseAll = __toESM(require("../ReleaseMap/releaseAll.js"));
var replace = __toESM(require("../ReleaseMap/replace.js"));
var import_releaseMap = require("./releaseMap.js");
function switchable(__trace) {
  return (0, import_core.map)(({
    key,
    releaseMap: releaseMap2
  }) => (newResource) => T.uninterruptibleMask(({
    restore
  }) => T.map_(T.tap_(T.bind_(T.bind_(T.bind_(T.zipRight_(T.chain_(replace.replace(key, (_) => T.unit)(releaseMap2), (0, import_Option.fold)(() => T.unit, (fin) => fin(T.exitUnit))), T.do), "r", () => T.environment()), "inner", () => makeReleaseMap.makeReleaseMap), "a", ({
    inner,
    r
  }) => restore(T.provideAll_(newResource.effect, Tp.tuple(r, inner)))), ({
    inner
  }) => replace.replace(key, (exit) => releaseAll.releaseAll(exit, import_ExecutionStrategy.sequential)(inner))(releaseMap2)), ({
    a
  }) => a.get(1))), __trace)(Do.bind_(Do.bind_(Do.do, "releaseMap", () => import_releaseMap.releaseMap), "key", ({
    releaseMap: releaseMap2
  }) => T.toManaged(T.chain_(addIfOpen.addIfOpen((_) => T.unit)(releaseMap2), (0, import_Option.fold)(() => T.interrupt, T.succeed)))));
}
module.exports = __toCommonJS(switchable_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  switchable
});
