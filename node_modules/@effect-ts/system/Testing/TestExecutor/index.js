var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var TestExecutor_exports = {};
__export(TestExecutor_exports, {
  defaultExecutor: () => defaultExecutor
});
var Cause = __toESM(require("../../Cause/index.js"));
var Tp = __toESM(require("../../Collections/Immutable/Tuple/index.js"));
var T = __toESM(require("../../Effect/index.js"));
var E = __toESM(require("../../Either/index.js"));
var import_Function = require("../../Function/index.js");
var M = __toESM(require("../../Managed/index.js"));
var ES = __toESM(require("../ExecutedSpec/index.js"));
var Spec = __toESM(require("../Spec/index.js"));
var TAM = __toESM(require("../TestAnnotationMap/index.js"));
var TF = __toESM(require("../TestFailure/index.js"));
function defaultExecutor(env) {
  return {
    environment: env,
    run: (spec, defExec) => M.use_(Spec.forEachExec(defExec, (e) => E.fold_(Cause.failureOrCause(e), ({
      tuple: [failure, annotations]
    }) => T.succeed(Tp.tuple(E.left(failure), annotations)), (cause) => T.succeed(Tp.tuple(E.left(TF.halt(cause)), TAM.TestAnnotationMap.empty))), ({
      tuple: [success, annotations]
    }) => T.succeed(Tp.tuple(E.right(success), annotations)))(Spec.provideLayer(env)(Spec.annotated(spec))), (_) => M.useNow(Spec.foldM(defExec)((_2) => {
      Spec.concreteSpecCase(_2);
      switch (_2._tag) {
        case "SuiteCase": {
          const v = _2;
          return M.map_(v.specs, (specs) => new ES.ExecutedSpec(new ES.ExecutedSuiteCase(v.label, specs)));
        }
        case "TestCase": {
          const v = _2;
          return T.toManaged(T.map_(v.test, ({
            tuple: [result, dynamicAnnotations]
          }) => new ES.ExecutedSpec(new ES.ExecutedTestCase(v.label, result, TAM.concat(v.annotations, dynamicAnnotations)))));
        }
      }
    })(_)))
  };
}
module.exports = __toCommonJS(TestExecutor_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  defaultExecutor
});
