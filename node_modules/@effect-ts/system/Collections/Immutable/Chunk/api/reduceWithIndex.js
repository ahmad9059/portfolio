var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var reduceWithIndex_exports = {};
__export(reduceWithIndex_exports, {
  reduceWithIndex: () => reduceWithIndex,
  reduceWithIndex_: () => reduceWithIndex_
});
var import_definition = require("../definition.js");
function reduceWithIndex_(self, s, f) {
  ;
  switch (self._typeId) {
    case import_definition.SingletonTypeId: {
      return f(0, s, self.a);
    }
    case import_definition.ArrTypeId: {
      const arr = self.arrayLike();
      const len = arr.length;
      let s1 = s;
      let i = 0;
      while (i < len) {
        s1 = f(i, s1, arr[i]);
        i++;
      }
      return s1;
    }
    default: {
      const iterator = self.arrayLikeIterator();
      let next;
      let s1 = s;
      let index = 0;
      while ((next = iterator.next()) && !next.done) {
        const array = next.value;
        const len = array.length;
        let i = 0;
        while (i < len) {
          const a = array[i];
          s1 = f(index, s1, a);
          i++;
          index++;
        }
      }
      return s1;
    }
  }
}
function reduceWithIndex(s, f) {
  return (self) => reduceWithIndex_(self, s, f);
}
module.exports = __toCommonJS(reduceWithIndex_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  reduceWithIndex,
  reduceWithIndex_
});
