var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var hubFactory_exports = {};
__export(hubFactory_exports, {
  makeBounded: () => makeBounded,
  makeUnbounded: () => makeUnbounded
});
var import_Operator = require("../../Operator/index.js");
var import_BoundedHubArb = require("./BoundedHubArb.js");
var import_BoundedHubPow2 = require("./BoundedHubPow2.js");
var import_BoundedHubSingle = require("./BoundedHubSingle.js");
var import_errors = require("./errors.js");
var import_UnboundedHub = require("./UnboundedHub.js");
__reExport(hubFactory_exports, require("./Hub.js"));
function nextPow2(n) {
  const nextPow = Math.ceil(Math.log(n) / Math.log(2));
  return Math.max(Math.pow(2, nextPow), 2);
}
function makeBounded(requestedCapacity) {
  (0, import_errors.ensureCapacity)(requestedCapacity);
  if (requestedCapacity === 1) {
    return new import_BoundedHubSingle.BoundedHubSingle();
  } else if (nextPow2(requestedCapacity) === requestedCapacity) {
    return new import_BoundedHubPow2.BoundedHubPow2(requestedCapacity);
  } else {
    return new import_BoundedHubArb.BoundedHubArb(requestedCapacity);
  }
}
function makeUnbounded() {
  return new import_UnboundedHub.UnboundedHub();
}
module.exports = __toCommonJS(hubFactory_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  makeBounded,
  makeUnbounded
});
