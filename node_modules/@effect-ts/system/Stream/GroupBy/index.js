var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var GroupBy_exports = {};
__export(GroupBy_exports, {
  GroupBy: () => GroupBy,
  filter: () => filter,
  filter_: () => filter_,
  first: () => first,
  first_: () => first_
});
var import_Operator = require("../../Operator/index.js");
var import_Function = require("../../Function/index.js");
var Q = __toESM(require("../../Queue/index.js"));
var T = __toESM(require("../_internal/effect.js"));
var import_chainPar = require("../Stream/chainPar.js");
var import_filterM = require("../Stream/filterM.js");
var import_flattenExitOption = require("../Stream/flattenExitOption.js");
var import_fromQueueWithShutdown = require("../Stream/fromQueueWithShutdown.js");
var import_map = require("../Stream/map.js");
var import_zipWithIndex = require("../Stream/zipWithIndex.js");
class GroupBy {
  constructor(grouped, buffer) {
    this.grouped = grouped;
    this.buffer = buffer;
    this.merge = this.merge.bind(this);
  }
  merge(f) {
    return (0, import_chainPar.chainPar)(Number.MAX_SAFE_INTEGER, this.buffer)(({
      tuple: [k, q]
    }) => f(k, (0, import_flattenExitOption.flattenExitOption)((0, import_fromQueueWithShutdown.fromQueueWithShutdown)(q))))(this.grouped);
  }
}
function first_(self, n) {
  const g1 = (0, import_map.map)((_) => _.get(0))((0, import_filterM.filterM)((elem) => {
    const {
      tuple: [{
        tuple: [, q]
      }, i]
    } = elem;
    if (i < n) {
      return T.as_(T.succeed(elem), true);
    } else {
      return T.as_(Q.shutdown(q), false);
    }
  })((0, import_zipWithIndex.zipWithIndex)(self.grouped)));
  return new GroupBy(g1, self.buffer);
}
function first(n) {
  return (self) => first_(self, n);
}
function filter_(self, f) {
  const g1 = (0, import_filterM.filterM)((elem) => {
    const {
      tuple: [k, q]
    } = elem;
    if (f(k)) {
      return T.as_(T.succeed(elem), true);
    } else {
      return T.as_(Q.shutdown(q), false);
    }
  })(self.grouped);
  return new GroupBy(g1, self.buffer);
}
function filter(f) {
  return (self) => filter_(self, f);
}
module.exports = __toCommonJS(GroupBy_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  GroupBy,
  filter,
  filter_,
  first,
  first_
});
