var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var Take_exports = {};
__export(Take_exports, {
  chunk: () => chunk,
  done: () => done,
  end: () => end,
  fold: () => fold,
  foldM: () => foldM,
  foldM_: () => foldM_,
  fold_: () => fold_,
  fromPull: () => fromPull,
  halt: () => halt,
  map: () => map,
  map_: () => map_,
  tap: () => tap,
  tap_: () => tap_
});
var import_Operator = require("../../Operator/index.js");
var C = __toESM(require("../../Cause/core.js"));
var A = __toESM(require("../../Collections/Immutable/Chunk/index.js"));
var E = __toESM(require("../../Exit/api.js"));
var import_Function = require("../../Function/index.js");
var O = __toESM(require("../../Option/index.js"));
var T = __toESM(require("../_internal/effect.js"));
function chunk(as) {
  return E.succeed(as);
}
function halt(cause) {
  return E.halt(C.map(O.some)(cause));
}
const end = /* @__PURE__ */ E.fail(O.none);
function done(take) {
  return T.done(take);
}
function fromPull(pull) {
  return T.foldCause_(pull, (c) => O.fold_(C.sequenceCauseOption(c), () => end, halt), chunk);
}
function tap_(take, f) {
  return T.asUnit(E.forEach_(take, f));
}
function tap(f) {
  return (take) => tap_(take, f);
}
function fold_(take, end2, error, value) {
  return E.fold_(take, (x) => O.fold_(C.sequenceCauseOption(x), () => end2, error), value);
}
function fold(end2, error, value) {
  return (take) => fold_(take, end2, error, value);
}
function foldM_(take, end2, error, value) {
  return E.foldM_(take, (x) => O.fold_(C.sequenceCauseOption(x), end2, error), value);
}
function foldM(end2, error, value) {
  return (take) => foldM_(take, end2, error, value);
}
function map_(take, f) {
  return E.map_(take, A.map(f));
}
function map(f) {
  return (take) => map_(take, f);
}
module.exports = __toCommonJS(Take_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  chunk,
  done,
  end,
  fold,
  foldM,
  foldM_,
  fold_,
  fromPull,
  halt,
  map,
  map_,
  tap,
  tap_
});
