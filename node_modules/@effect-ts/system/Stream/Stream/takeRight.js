var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var takeRight_exports = {};
__export(takeRight_exports, {
  takeRight: () => takeRight,
  takeRight_: () => takeRight_
});
var A = __toESM(require("../../Collections/Immutable/Chunk/index.js"));
var import_Function = require("../../Function/index.js");
var O = __toESM(require("../../Option/index.js"));
var Q = __toESM(require("../../Queue/index.js"));
var T = __toESM(require("../_internal/effect.js"));
var M = __toESM(require("../_internal/managed.js"));
var Ref = __toESM(require("../_internal/ref.js"));
var BP = __toESM(require("../BufferedPull/index.js"));
var Pull = __toESM(require("../Pull/index.js"));
var import_definitions = require("./definitions.js");
var import_empty = require("./empty.js");
function takeRight_(self, n) {
  if (n <= 0) {
    return import_empty.empty;
  } else {
    return new import_definitions.Stream(M.map_(M.bind_(M.bind_(M.bind_(M.do, "pull", () => M.mapM_(self.proc, BP.make)), "queue", () => T.toManaged(Q.makeSliding(n))), "done", () => Ref.makeManagedRef(false)), ({
      done,
      pull,
      queue
    }) => T.chain_(done.get, (_) => {
      if (_) {
        return Pull.end;
      } else {
        return T.catchSome_(T.as_(T.tap_(BP.pullElement(pull), (x) => Q.offer_(queue, x)), A.empty()), O.fold(() => O.some(T.zipRight_(done.set(true), Q.takeAll(queue))), () => O.none));
      }
    })));
  }
}
function takeRight(n) {
  return (self) => takeRight_(self, n);
}
module.exports = __toCommonJS(takeRight_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  takeRight,
  takeRight_
});
