var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var distributedWith_exports = {};
__export(distributedWith_exports, {
  distributedWith: () => distributedWith,
  distributedWith_: () => distributedWith_
});
var A = __toESM(require("../../Collections/Immutable/Chunk/index.js"));
var Map = __toESM(require("../../Collections/Immutable/Map/index.js"));
var import_Function = require("../../Function/index.js");
var P = __toESM(require("../../Promise/index.js"));
var T = __toESM(require("../_internal/effect.js"));
var M = __toESM(require("../_internal/managed.js"));
var import_distributedWithDynamic = require("./distributedWithDynamic.js");
function distributedWith(n, maximumLag, decide) {
  return (self) => distributedWith_(self, n, maximumLag, decide);
}
function distributedWith_(self, n, maximumLag, decide) {
  return M.chain_(M.fromEffect(P.make()), (prom) => M.chain_((0, import_distributedWithDynamic.distributedWithDynamic_)(self, maximumLag, (o) => T.chain_(P.await(prom), (_) => _(o)), (_) => T.unit), (next) => M.fromEffect(T.chain_(A.mapEffect_(A.map_(A.range(0, n - 1), (id) => T.map_(next, ({
    tuple: [key, queue]
  }) => [[key, id], queue])), import_Function.identity), (entries) => {
    const [mappings, queues] = A.reduceRight_(entries, [Map.empty, A.empty()], ([mapping, queue], [mappings2, queues2]) => [Map.insert(mapping[0], mapping[1])(mappings2), A.concat_(A.single(queue), queues2)]);
    return T.as_(P.succeed_(prom, (o) => T.map_(decide(o), (f) => (key) => f(mappings.get(key)))), queues);
  }))));
}
module.exports = __toCommonJS(distributedWith_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  distributedWith,
  distributedWith_
});
