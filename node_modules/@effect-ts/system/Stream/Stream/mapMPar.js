var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var mapMPar_exports = {};
__export(mapMPar_exports, {
  mapMPar: () => mapMPar
});
var A = __toESM(require("../../Collections/Immutable/Chunk/index.js"));
var import_Function = require("../../Function/index.js");
var O = __toESM(require("../../Option/index.js"));
var P = __toESM(require("../../Promise/index.js"));
var Q = __toESM(require("../../Queue/index.js"));
var SM = __toESM(require("../../Semaphore/index.js"));
var T = __toESM(require("../_internal/effect.js"));
var M = __toESM(require("../_internal/managed.js"));
var Pull = __toESM(require("../Pull/index.js"));
var import_definitions = require("./definitions.js");
var import_forEach = require("./forEach.js");
function mapMPar(n) {
  return (f) => (self) => new import_definitions.Stream(M.map_(M.tap_(M.bind_(M.bind_(M.bind_(M.do, "out", () => M.fromEffect(Q.makeBounded(n))), "errorSignal", () => M.fromEffect(P.make())), "permits", () => M.fromEffect(SM.makeSemaphore(n))), ({
    errorSignal,
    out,
    permits
  }) => M.fork(M.foldCauseM_((0, import_forEach.forEachManaged)((a) => T.asUnit(T.tap_(T.tap_(T.tap_(T.bind_(T.bind_(T.do, "p", () => P.make()), "latch", () => P.make()), ({
    p
  }) => Q.offer_(out, T.mapError_(P.await(p), O.some))), ({
    latch,
    p
  }) => T.fork(SM.withPermit_(T.chain_(P.succeed(void 0)(latch), () => T.to_(T.tapCause_(T.raceFirst_(P.await(errorSignal), f(a)), (e) => P.halt(e)(errorSignal)), p)), permits))), ({
    latch
  }) => P.await(latch))))(self), (c) => M.fromEffect(Q.offer_(out, Pull.halt(c))), () => M.fromEffect(T.chain_(SM.withPermits_(T.unit, permits, n), () => Q.offer_(out, Pull.end)))))), ({
    out
  }) => T.map_(T.flatten(Q.take(out)), (o) => A.single(o))));
}
module.exports = __toCommonJS(mapMPar_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  mapMPar
});
