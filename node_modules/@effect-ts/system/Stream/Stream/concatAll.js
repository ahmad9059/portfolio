var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var concatAll_exports = {};
__export(concatAll_exports, {
  concatAll: () => concatAll
});
var C = __toESM(require("../../Cause/index.js"));
var A = __toESM(require("../../Collections/Immutable/Chunk/index.js"));
var import_Function = require("../../Function/index.js");
var O = __toESM(require("../../Option/index.js"));
var T = __toESM(require("../_internal/effect.js"));
var M = __toESM(require("../_internal/managed.js"));
var Ref = __toESM(require("../_internal/ref.js"));
var Pull = __toESM(require("../Pull/index.js"));
var import_definitions = require("./definitions.js");
function go(streams, chunkSize, currIndex, currStream, switchStream) {
  return T.catchAllCause_(T.flatten(currStream.get), (x) => O.fold_(C.sequenceCauseOption(x), () => T.chain_(Ref.getAndUpdate_(currIndex, (x2) => x2 + 1), (i) => i >= chunkSize ? Pull.end : T.zipRight_(T.chain_(switchStream(A.unsafeGet_(streams, i).proc), currStream.set), go(streams, chunkSize, currIndex, currStream, switchStream))), Pull.halt));
}
function concatAll(streams) {
  const chunkSize = A.size(streams);
  return new import_definitions.Stream(M.map_(M.bind_(M.bind_(M.bind_(M.do, "currIndex", () => Ref.makeManagedRef(0)), "currStream", () => Ref.makeManagedRef(Pull.end)), "switchStream", () => M.switchable()), ({
    currIndex,
    currStream,
    switchStream
  }) => go(streams, chunkSize, currIndex, currStream, switchStream)));
}
module.exports = __toCommonJS(concatAll_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  concatAll
});
