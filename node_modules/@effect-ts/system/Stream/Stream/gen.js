var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var gen_exports = {};
__export(gen_exports, {
  GenStream: () => GenStream,
  gen: () => gen
});
var L = __toESM(require("../../Collections/Immutable/List/index.js"));
var import_GlobalExceptions = require("../../GlobalExceptions/index.js");
var import_Utils = require("../../Utils/index.js");
var T = __toESM(require("../_internal/effect.js"));
var import_effect = require("../_internal/effect.js");
var import_chain = require("./chain.js");
var import_definitions = require("./definitions.js");
var import_fail = require("./fail.js");
var import_fromEffect = require("./fromEffect.js");
var import_succeed = require("./succeed.js");
var import_suspend = require("./suspend.js");
class GenStream {
  constructor(effect) {
    this.effect = effect;
  }
  *[Symbol.iterator]() {
    return yield this;
  }
}
const adapter = (_, __) => {
  return new GenStream(() => {
    const x = _();
    if ((0, import_Utils.isOption)(x)) {
      return x._tag === "None" ? (0, import_fail.fail)(__ ? __() : new import_GlobalExceptions.NoSuchElementException()) : (0, import_succeed.succeed)(x.value);
    } else if ((0, import_Utils.isEither)(x)) {
      return (0, import_fromEffect.fromEffect)(T.fromEither(() => x));
    } else if (x instanceof import_definitions.Stream) {
      return x;
    } else if ((0, import_Utils.isTag)(x)) {
      return (0, import_fromEffect.fromEffect)(T.service(x));
    }
    return (0, import_fromEffect.fromEffect)(x);
  });
};
function gen(...args) {
  function gen_(f) {
    return (0, import_suspend.suspend)(() => {
      function run(replayStack) {
        const iterator = f(adapter);
        let state = iterator.next();
        for (const a of replayStack) {
          if (state.done) {
            return (0, import_fromEffect.fromEffect)(T.die(new import_GlobalExceptions.PrematureGeneratorExit()));
          }
          state = iterator.next(a);
        }
        if (state.done) {
          return (0, import_succeed.succeed)(state.value);
        }
        return (0, import_chain.chain_)(state.value["effect"](), (val) => {
          return run(L.append_(replayStack, val));
        });
      }
      return run(L.empty());
    });
  }
  if (args.length === 0) {
    return (f) => gen_(f);
  }
  return gen_(args[0]);
}
module.exports = __toCommonJS(gen_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  GenStream,
  gen
});
