var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var Handoff_exports = {};
__export(Handoff_exports, {
  make: () => make,
  offer: () => offer,
  offer_: () => offer_,
  poll: () => poll,
  take: () => take
});
var import_Operator = require("../../Operator/index.js");
var Tp = __toESM(require("../../Collections/Immutable/Tuple/index.js"));
var import_Function = require("../../Function/index.js");
var import_Option = require("../../Option/index.js");
var P = __toESM(require("../../Promise/index.js"));
var import_Utils = require("../../Utils/index.js");
var T = __toESM(require("../_internal/effect.js"));
var R = __toESM(require("../_internal/ref.js"));
class Empty {
  constructor(notifyConsumer) {
    this.notifyConsumer = notifyConsumer;
    this._tag = "Empty";
  }
}
class Full {
  constructor(a, notifyProducer) {
    this.a = a;
    this.notifyProducer = notifyProducer;
    this._tag = "Full";
  }
}
class Handoff {
  constructor(ref) {
    this.ref = ref;
    this._tag = "Handoff";
  }
}
function make() {
  return T.map_(T.chain_(P.make(), (p) => R.makeRef(new Empty(p))), (ref) => new Handoff(ref));
}
function offer_(h, a) {
  return T.chain_(P.make(), (p) => T.flatten(R.modify_(h.ref, (0, import_Utils.matchTag)({
    Empty: ({
      notifyConsumer
    }) => Tp.tuple(T.zipRight_(P.succeed((0, import_Function.constVoid)())(notifyConsumer), P.await(p)), new Full(a, p)),
    Full: (s) => Tp.tuple(T.chain_(P.await(s.notifyProducer), () => offer_(h, a)), s)
  }))));
}
function offer(a) {
  return (h) => offer_(h, a);
}
function take(h) {
  return T.chain_(P.make(), (p) => T.flatten(R.modify_(h.ref, (0, import_Utils.matchTag)({
    Empty: (s) => Tp.tuple(T.chain_(P.await(s.notifyConsumer), () => take(h)), s),
    Full: ({
      a,
      notifyProducer
    }) => Tp.tuple(T.as_(P.succeed((0, import_Function.constVoid)())(notifyProducer), a), new Empty(p))
  }))));
}
function poll(h) {
  return T.chain_(P.make(), (p) => T.flatten(R.modify_(h.ref, (0, import_Utils.matchTag)({
    Empty: (s) => Tp.tuple(T.succeed(import_Option.none), s),
    Full: ({
      a,
      notifyProducer
    }) => Tp.tuple(T.as_(P.succeed((0, import_Function.constVoid)())(notifyProducer), (0, import_Option.some)(a)), new Empty(p))
  }))));
}
module.exports = __toCommonJS(Handoff_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  make,
  offer,
  offer_,
  poll,
  take
});
