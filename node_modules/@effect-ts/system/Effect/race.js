var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var race_exports = {};
__export(race_exports, {
  race: () => race,
  raceEither: () => raceEither,
  raceEither_: () => raceEither_,
  raceFirst: () => raceFirst,
  raceFirst_: () => raceFirst_,
  race_: () => race_
});
var Cause = __toESM(require("../Cause/core.js"));
var E = __toESM(require("../Either/index.js"));
var Exit = __toESM(require("../Exit/api.js"));
var Fiber = __toESM(require("../Fiber/core.js"));
var import_Function = require("../Function/index.js");
var import_as = require("./as.js");
var core = __toESM(require("./core.js"));
var import_core_scope = require("./core-scope.js");
var import_done = require("./done.js");
var import_interruption = require("./interruption.js");
var import_map = require("./map.js");
var import_mapErrorCause = require("./mapErrorCause.js");
function race_(self, that, __trace) {
  return core.descriptorWith((descriptor) => {
    const parentFiberId = descriptor.id;
    const maybeDisconnect = (io) => (0, import_interruption.uninterruptibleMask)((interruptible) => interruptible.force(io));
    return (0, import_core_scope.raceWith_)(maybeDisconnect(self), maybeDisconnect(that), (exit, right) => Exit.foldM_(exit, (cause) => (0, import_mapErrorCause.mapErrorCause_)(Fiber.join(right), (_) => Cause.both(cause, _)), (a) => (0, import_as.as_)(right.interruptAs(parentFiberId), a)), (exit, left) => Exit.foldM_(exit, (cause) => (0, import_mapErrorCause.mapErrorCause_)(Fiber.join(left), (_) => Cause.both(_, cause)), (a) => (0, import_as.as_)(left.interruptAs(parentFiberId), a)), __trace);
  });
}
function race(that, __trace) {
  return (self) => race_(self, that, __trace);
}
function raceEither_(self, that, __trace) {
  return race_((0, import_map.map_)(self, E.left), (0, import_map.map_)(that, E.right), __trace);
}
function raceEither(that, __trace) {
  return (self) => raceEither_(self, that, __trace);
}
function raceFirst_(self, that, __trace) {
  return core.chain_(race_(core.result(self), core.result(that), __trace), (a) => (0, import_done.done)(a));
}
function raceFirst(that, __trace) {
  return (self) => raceFirst_(self, that, __trace);
}
module.exports = __toCommonJS(race_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  race,
  raceEither,
  raceEither_,
  raceFirst,
  raceFirst_,
  race_
});
