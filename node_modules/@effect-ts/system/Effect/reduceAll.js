var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var reduceAll_exports = {};
__export(reduceAll_exports, {
  reduceAll: () => reduceAll,
  reduceAllPar: () => reduceAllPar,
  reduceAllParN: () => reduceAllParN,
  reduceAllParN_: () => reduceAllParN_,
  reduceAllPar_: () => reduceAllPar_,
  reduceAll_: () => reduceAll_
});
var A = __toESM(require("../Collections/Immutable/Array/index.js"));
var NA = __toESM(require("../Collections/Immutable/NonEmptyArray/index.js"));
var O = __toESM(require("../Option/index.js"));
var import_core = require("./core.js");
var import_map = require("./map.js");
var import_mergeAll = require("./mergeAll.js");
var import_zipWith = require("./zipWith.js");
function reduceAll_(as, f, __trace) {
  return (0, import_core.suspend)(() => A.reduce_(NA.tail(as), NA.head(as), (acc, a) => (0, import_zipWith.zipWith_)(acc, a, f)), __trace);
}
function reduceAll(f, __trace) {
  return (as) => reduceAll_(as, f, __trace);
}
function reduceAllPar_(as, f, __trace) {
  return (0, import_map.map_)((0, import_mergeAll.mergeAllPar_)(as, O.none, (acc, elem) => O.some(O.fold_(acc, () => elem, (a) => f(a, elem))), __trace), O.getOrElse(() => {
    throw new Error("Bug");
  }));
}
function reduceAllPar(f, __trace) {
  return (as) => reduceAllPar_(as, f, __trace);
}
function reduceAllParN_(as, n, f, __trace) {
  return (0, import_map.map_)((0, import_mergeAll.mergeAllParN_)(as, n, O.none, (acc, elem) => O.some(O.fold_(acc, () => elem, (a) => f(a, elem))), __trace), O.getOrElse(() => {
    throw new Error("Bug");
  }));
}
function reduceAllParN(n, f, __trace) {
  return (as) => reduceAllParN_(as, n, f, __trace);
}
module.exports = __toCommonJS(reduceAll_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  reduceAll,
  reduceAllPar,
  reduceAllParN,
  reduceAllParN_,
  reduceAllPar_,
  reduceAll_
});
