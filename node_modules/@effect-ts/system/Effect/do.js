var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var do_exports = {};
__export(do_exports, {
  bind: () => bind,
  bind_: () => bind_,
  do: () => do_,
  let: () => let__,
  let_: () => let_
});
var import_core = require("./core.js");
var import_map = require("./map.js");
function bind(tag, f, __trace) {
  return (mk) => bind_(mk, tag, f, __trace);
}
function bind_(mk, tag, f, __trace) {
  return (0, import_core.chain_)(mk, (k) => (0, import_map.map_)(f(k), (a) => __spreadProps(__spreadValues({}, k), {
    [tag]: a
  })), __trace);
}
function let__(tag, f, __trace) {
  return (mk) => let_(mk, tag, f);
}
function let_(mk, tag, f, __trace) {
  return (0, import_map.map_)(mk, (k) => __spreadProps(__spreadValues({}, k), {
    [tag]: f(k)
  }), __trace);
}
const do_ = /* @__PURE__ */ (0, import_core.succeed)({});
module.exports = __toCommonJS(do_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  bind,
  bind_,
  do: null,
  let,
  let_
});
