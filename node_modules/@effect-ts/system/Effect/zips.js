var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var zips_exports = {};
__export(zips_exports, {
  zipLeft: () => zipLeft,
  zipLeftPar: () => zipLeftPar,
  zipLeftPar_: () => zipLeftPar_,
  zipLeft_: () => zipLeft_,
  zipRight: () => zipRight,
  zipRightPar: () => zipRightPar,
  zipRightPar_: () => zipRightPar_,
  zipRight_: () => zipRight_
});
var import_as = require("./as.js");
var import_core = require("./core.js");
var import_zipWithPar = require("./zipWithPar.js");
function zipLeft_(a, b, __trace) {
  return (0, import_core.chain_)(a, (r) => (0, import_as.as_)(b, r));
}
function zipLeft(b, __trace) {
  return (a) => zipLeft_(a, b, __trace);
}
function zipLeftPar_(a, b, __trace) {
  return (0, import_zipWithPar.zipWithPar_)(a, b, (a2) => a2, __trace);
}
function zipLeftPar(b, __trace) {
  return (a) => zipLeftPar_(a, b, __trace);
}
function zipRight_(a, b, __trace) {
  return (0, import_core.chain_)(a, () => b, __trace);
}
function zipRight(b, __trace) {
  return (a) => zipRight_(a, b, __trace);
}
function zipRightPar_(a, b, __trace) {
  return (0, import_zipWithPar.zipWithPar_)(a, b, (_, a2) => a2, __trace);
}
function zipRightPar(b, __trace) {
  return (a) => zipRightPar_(a, b, __trace);
}
module.exports = __toCommonJS(zips_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  zipLeft,
  zipLeftPar,
  zipLeftPar_,
  zipLeft_,
  zipRight,
  zipRightPar,
  zipRightPar_,
  zipRight_
});
