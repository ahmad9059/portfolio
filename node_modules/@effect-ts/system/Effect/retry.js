var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var retry_exports = {};
__export(retry_exports, {
  retry: () => retry,
  retryOrElse: () => retryOrElse,
  retryOrElseEither: () => retryOrElseEither,
  retryOrElseEither_: () => retryOrElseEither_,
  retryOrElse_: () => retryOrElse_,
  retry_: () => retry_
});
var E = __toESM(require("../Either/index.js"));
var import_Function = require("../Function/index.js");
var schedule = __toESM(require("../Schedule/index.js"));
var catchAll = __toESM(require("./catchAll.js"));
var core = __toESM(require("./core.js"));
var fail = __toESM(require("./fail.js"));
var foldM = __toESM(require("./foldM.js"));
var map = __toESM(require("./map.js"));
var orDie = __toESM(require("./orDie.js"));
function loop(self, orElse, driver) {
  return catchAll.catchAll_(map.map_(self, (a) => E.right(a)), (e) => foldM.foldM_(driver.next(e), () => core.chain_(orDie.orDie(driver.last), (o) => map.map_(orElse(e, o), (a) => E.left(a))), () => loop(self, orElse, driver)));
}
function retryOrElseEither_(self, policy, orElse, __trace) {
  return core.chain_(schedule.driver(policy), (a) => loop(self, orElse, a), __trace);
}
function retryOrElseEither(policy, orElse, __trace) {
  return (self) => retryOrElseEither_(self, policy, orElse, __trace);
}
function retryOrElse_(self, policy, orElse, __trace) {
  return map.map_(retryOrElseEither_(self, policy, orElse, __trace), E.fold(import_Function.identity, import_Function.identity));
}
function retryOrElse(policy, orElse, __trace) {
  return (self) => retryOrElse_(self, policy, orElse, __trace);
}
function retry_(self, policy, __trace) {
  return retryOrElse_(self, policy, (e, _) => fail.fail(e), __trace);
}
function retry(policy, __trace) {
  return (self) => retry_(self, policy, __trace);
}
module.exports = __toCommonJS(retry_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  retry,
  retryOrElse,
  retryOrElseEither,
  retryOrElseEither_,
  retryOrElse_,
  retry_
});
