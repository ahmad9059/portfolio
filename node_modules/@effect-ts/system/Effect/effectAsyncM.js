var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var effectAsyncM_exports = {};
__export(effectAsyncM_exports, {
  effectAsyncM: () => effectAsyncM
});
var import_Function = require("../Function/index.js");
var catchAllCause = __toESM(require("./catchAllCause.js"));
var import_core = require("./core.js");
var Do = __toESM(require("./do.js"));
var P = __toESM(require("./excl-forEach-promise.js"));
var import_interruption = require("./interruption.js");
var map = __toESM(require("./map.js"));
var import_runtime = require("./runtime.js");
var to = __toESM(require("./to.js"));
var zips = __toESM(require("./zips.js"));
function effectAsyncM(register, __trace) {
  return map.map_(Do.bind_(Do.bind_(Do.bind_(Do.do, "p", () => P.make()), "r", () => (0, import_runtime.runtime)()), "a", ({
    p,
    r
  }) => (0, import_interruption.uninterruptibleMask)(({
    restore
  }) => zips.zipRight_((0, import_core.fork)(restore(catchAllCause.catchAllCause_(register((k) => {
    r.run(to.to_(k, p));
  }), (c) => P.halt(c)(p))), __trace), restore(P.await(p))))), ({
    a
  }) => a);
}
module.exports = __toCommonJS(effectAsyncM_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  effectAsyncM
});
