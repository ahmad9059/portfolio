var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var Clock_exports = {};
__export(Clock_exports, {
  Clock: () => Clock,
  ClockId: () => import_id.ClockId,
  HasClock: () => HasClock,
  HasTestClock: () => HasTestClock,
  LiveClock: () => LiveClock,
  ProxyClock: () => ProxyClock,
  TestClock: () => TestClock,
  currentTime: () => currentTime,
  provideTestClock: () => provideTestClock,
  sleep: () => sleep,
  withClock: () => withClock,
  withClockM: () => withClockM
});
var import_Operator = require("../Operator/index.js");
var import_core = require("../Effect/core.js");
var import_effectAsyncInterrupt = require("../Effect/effectAsyncInterrupt.js");
var import_has = require("../Effect/has.js");
var import_Has = require("../Has/index.js");
var import_id = require("./id.js");
class Clock {
  constructor() {
    this.serviceId = import_id.ClockId;
  }
}
const HasClock = /* @__PURE__ */ (0, import_Has.tag)(import_id.ClockId);
class LiveClock extends Clock {
  constructor() {
    super(...arguments);
    this.currentTime = (0, import_core.succeedWith)(() => new Date().getTime());
    this.sleep = (ms, trace) => (0, import_effectAsyncInterrupt.effectAsyncInterrupt)((cb) => {
      const timeout = setTimeout(() => {
        cb(import_core.unit);
      }, ms);
      return (0, import_core.succeedWith)(() => {
        clearTimeout(timeout);
      });
    }, trace);
  }
}
class ProxyClock extends Clock {
  constructor(currentTime2, sleep2) {
    super();
    this.currentTime = currentTime2;
    this.sleep = sleep2;
  }
}
const currentTime = /* @__PURE__ */ (0, import_has.accessServiceM)(HasClock)((_) => _.currentTime);
function sleep(ms, __trace) {
  return (0, import_has.accessServiceM)(HasClock)((_) => _.sleep(ms, __trace));
}
const withClockM = /* @__PURE__ */ (0, import_has.accessServiceM)(HasClock);
const withClock = /* @__PURE__ */ (0, import_has.accessService)(HasClock);
class TestClock extends Clock {
  constructor() {
    super(...arguments);
    this.time = new Date().getTime();
    this.currentTime = (0, import_core.succeedWith)(() => this.time);
    this.sleep = () => import_core.unit;
    this.advance = (ms) => (0, import_core.succeedWith)(() => {
      this.time = this.time + ms;
    });
  }
}
TestClock.advance = (ms) => (0, import_has.accessServiceM)(HasTestClock)((_) => _.advance(ms));
const HasTestClock = /* @__PURE__ */ (0, import_Has.tag)(import_id.ClockId);
const provideTestClock = /* @__PURE__ */ (0, import_has.provideServiceM)(HasTestClock)(/* @__PURE__ */ (0, import_core.succeedWith)(() => new TestClock()));
module.exports = __toCommonJS(Clock_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Clock,
  ClockId,
  HasClock,
  HasTestClock,
  LiveClock,
  ProxyClock,
  TestClock,
  currentTime,
  provideTestClock,
  sleep,
  withClock,
  withClockM
});
