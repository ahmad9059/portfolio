var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var gen_exports = {};
__export(gen_exports, {
  GenSync: () => GenSync,
  gen: () => gen
});
var import_commons = require("../Effect/commons.js");
var import_Function = require("../Function/index.js");
var import_GlobalExceptions = require("../GlobalExceptions/index.js");
var import_Utils = require("../Utils/index.js");
var import_core = require("./core.js");
var import_has = require("./has.js");
class GenSync {
  constructor(effect) {
    this.effect = effect;
  }
  *[Symbol.iterator]() {
    return yield this;
  }
}
const adapter = (_, __) => {
  if ((0, import_Utils.isTag)(_)) {
    return new GenSync((0, import_has.accessService)(_)(import_Function.identity));
  }
  if ((0, import_Utils.isEither)(_)) {
    return new GenSync(_._tag === "Left" ? (0, import_core.fail)(_.left) : (0, import_core.succeed)(_.right));
  }
  if ((0, import_Utils.isOption)(_)) {
    return new GenSync(_._tag === "None" ? (0, import_core.fail)(__ ? __() : new import_GlobalExceptions.NoSuchElementException()) : (0, import_core.succeed)(_.value));
  }
  return new GenSync(_);
};
function gen(f) {
  return (0, import_core.suspend)(() => {
    const iterator = f(adapter);
    const state = iterator.next();
    function run(state2) {
      if (state2.done) {
        return (0, import_core.succeed)(state2.value);
      }
      return (0, import_core.chain_)(state2.value["effect"], (val) => {
        const next = iterator.next(val);
        return run(next);
      });
    }
    return run(state);
  });
}
module.exports = __toCommonJS(gen_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  GenSync,
  gen
});
