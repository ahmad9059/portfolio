var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var HasEquals_exports = {};
__export(HasEquals_exports, {
  deepEquals: () => deepEquals,
  equals: () => equals,
  equalsSym: () => equalsSym,
  hasEquals: () => hasEquals
});
var import_HasHash = require("../HasHash/index.js");
var import_comparator = require("./comparator.js");
var import_utils = require("./utils.js");
const equalsSym = /* @__PURE__ */ Symbol();
function hasEquals(u) {
  return (0, import_HasHash.hasHash)(u) && equalsSym in u;
}
const deepEquals = /* @__PURE__ */ (0, import_comparator.createComparator)(/* @__PURE__ */ (0, import_utils.createCircularEqualCreator)((eq) => (a, b, meta) => {
  if (hasEquals(a)) {
    return a[equalsSym](b);
  } else {
    return eq(a, b, meta);
  }
}));
function equals(a, b) {
  if (!(0, import_utils.sameValueZeroEqual)((0, import_HasHash.hash)(a), (0, import_HasHash.hash)(b))) {
    return false;
  } else if (hasEquals(a)) {
    return a[equalsSym](b);
  } else if (hasEquals(b)) {
    return b[equalsSym](a);
  }
  return (0, import_utils.sameValueZeroEqual)(a, b);
}
module.exports = __toCommonJS(HasEquals_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  deepEquals,
  equals,
  equalsSym,
  hasEquals
});
