var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var comparator_exports = {};
__export(comparator_exports, {
  createComparator: () => createComparator
});
var import_utils = require("./utils.js");
const {
  isArray
} = Array;
const HAS_MAP_SUPPORT = typeof Map === "function";
const HAS_SET_SUPPORT = typeof Set === "function";
const OBJECT_TYPEOF = "object";
function createComparator(createIsEqual) {
  const isEqual = typeof createIsEqual === "function" ? createIsEqual(comparator) : comparator;
  function comparator(a, b, meta) {
    if ((0, import_utils.sameValueZeroEqual)(a, b)) {
      return true;
    }
    if (a && b && typeof a === OBJECT_TYPEOF && typeof b === OBJECT_TYPEOF) {
      if ((0, import_utils.isPlainObject)(a) && (0, import_utils.isPlainObject)(b)) {
        return (0, import_utils.areObjectsEqual)(a, b, isEqual, meta);
      }
      const arrayA = isArray(a);
      const arrayB = isArray(b);
      if (arrayA || arrayB) {
        return arrayA === arrayB && (0, import_utils.areArraysEqual)(a, b, isEqual, meta);
      }
      const aDate = a instanceof Date;
      const bDate = b instanceof Date;
      if (aDate || bDate) {
        return aDate === bDate && (0, import_utils.sameValueZeroEqual)(a.getTime(), b.getTime());
      }
      const aRegExp = a instanceof RegExp;
      const bRegExp = b instanceof RegExp;
      if (aRegExp || bRegExp) {
        return aRegExp === bRegExp && (0, import_utils.areRegExpsEqual)(a, b);
      }
      if ((0, import_utils.isPromiseLike)(a) || (0, import_utils.isPromiseLike)(b)) {
        return a === b;
      }
      if (HAS_MAP_SUPPORT) {
        const aMap = a instanceof Map;
        const bMap = b instanceof Map;
        if (aMap || bMap) {
          return aMap === bMap && (0, import_utils.areMapsEqual)(a, b, isEqual, meta);
        }
      }
      if (HAS_SET_SUPPORT) {
        const aSet = a instanceof Set;
        const bSet = b instanceof Set;
        if (aSet || bSet) {
          return aSet === bSet && (0, import_utils.areSetsEqual)(a, b, isEqual, meta);
        }
      }
      return (0, import_utils.areObjectsEqual)(a, b, isEqual, meta);
    }
    return false;
  }
  return isEqual;
}
module.exports = __toCommonJS(comparator_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  createComparator
});
