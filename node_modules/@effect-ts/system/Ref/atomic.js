var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var atomic_exports = {};
__export(atomic_exports, {
  getAndSet: () => getAndSet,
  getAndUpdate: () => getAndUpdate,
  getAndUpdateSome: () => getAndUpdateSome,
  modify: () => modify,
  modifySome: () => modifySome,
  unsafeUpdate: () => unsafeUpdate,
  update: () => update,
  updateAndGet: () => updateAndGet,
  updateSome: () => updateSome,
  updateSomeAndGet: () => updateSomeAndGet
});
var import_core = require("../Effect/core.js");
function getAndSet(self, a) {
  return (0, import_core.succeedWith)(() => {
    const v = self.value.get;
    self.value.set(a);
    return v;
  });
}
function getAndUpdate(self, f) {
  return (0, import_core.succeedWith)(() => {
    const v = self.value.get;
    self.value.set(f(v));
    return v;
  });
}
function getAndUpdateSome(self, f) {
  return (0, import_core.succeedWith)(() => {
    const v = self.value.get;
    const o = f(v);
    if (o._tag === "Some") {
      self.value.set(o.value);
    }
    return v;
  });
}
function modify(self, f) {
  return (0, import_core.succeedWith)(() => {
    const v = self.value.get;
    const o = f(v);
    self.value.set(o.get(1));
    return o.get(0);
  });
}
function modifySome(self, def, f) {
  return (0, import_core.succeedWith)(() => {
    const v = self.value.get;
    const o = f(v);
    if (o._tag === "Some") {
      self.value.set(o.value.get(1));
      return o.value.get(0);
    }
    return def;
  });
}
function update(self, f) {
  return (0, import_core.succeedWith)(() => {
    self.value.set(f(self.value.get));
  });
}
function updateAndGet(self, f) {
  return (0, import_core.succeedWith)(() => {
    self.value.set(f(self.value.get));
    return self.value.get;
  });
}
function updateSome(self, f) {
  return (0, import_core.succeedWith)(() => {
    const o = f(self.value.get);
    if (o._tag === "Some") {
      self.value.set(o.value);
    }
  });
}
function updateSomeAndGet(self, f) {
  return (0, import_core.succeedWith)(() => {
    const o = f(self.value.get);
    if (o._tag === "Some") {
      self.value.set(o.value);
    }
    return self.value.get;
  });
}
function unsafeUpdate(self, f) {
  self.value.set(f(self.value.get));
}
module.exports = __toCommonJS(atomic_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getAndSet,
  getAndUpdate,
  getAndUpdateSome,
  modify,
  modifySome,
  unsafeUpdate,
  update,
  updateAndGet,
  updateSome,
  updateSomeAndGet
});
