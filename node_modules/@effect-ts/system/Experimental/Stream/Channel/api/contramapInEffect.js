var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var contramapInEffect_exports = {};
__export(contramapInEffect_exports, {
  contramapInEffect: () => contramapInEffect,
  contramapInEffect_: () => contramapInEffect_
});
var C = __toESM(require("../core.js"));
var ReadWith = __toESM(require("./readWith.js"));
var ZipRight = __toESM(require("./zipRight.js"));
function contramapInMReader(f) {
  return ReadWith.readWith((_in) => ZipRight.zipRight_(C.chain_(C.fromEffect(f(_in)), (_) => C.write(_)), contramapInMReader(f)), (err) => C.fail(err), (done) => C.end(done));
}
function contramapInEffect_(self, f) {
  return C.pipeTo_(contramapInMReader(f), self);
}
function contramapInEffect(f) {
  return (self) => contramapInEffect_(self, f);
}
module.exports = __toCommonJS(contramapInEffect_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  contramapInEffect,
  contramapInEffect_
});
