var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var asyncEffect_exports = {};
__export(asyncEffect_exports, {
  asyncEffect: () => asyncEffect
});
var CS = __toESM(require("../../../../Cause/index.js"));
var T = __toESM(require("../../../../Effect/index.js"));
var E = __toESM(require("../../../../Either/index.js"));
var import_Function = require("../../../../Function/index.js");
var M = __toESM(require("../../../../Managed/index.js"));
var O = __toESM(require("../../../../Option/index.js"));
var Q = __toESM(require("../../../../Queue/index.js"));
var CH = __toESM(require("../../Channel/index.js"));
var TK = __toESM(require("../../Take/index.js"));
var C = __toESM(require("../core.js"));
var import_Emit = require("./_internal/Emit.js");
function asyncEffect(register, outputBuffer = 16) {
  return new C.Stream(CH.unwrapManaged(M.map_(M.tap_(M.bind_(M.bind_(M.do, "output", () => T.toManagedRelease_(Q.makeBounded(outputBuffer), Q.shutdown)), "runtime", () => M.runtime()), ({
    output,
    runtime
  }) => T.toManaged(register((0, import_Emit.toEmit)((k) => {
    try {
      runtime.run(T.chain_(TK.fromPull(k), (_) => Q.offer_(output, _)));
    } catch (e) {
      if (CS.isFiberFailure(e)) {
        if (!CS.interrupted(e.cause)) {
          throw e;
        }
      }
    }
  })))), ({
    output
  }) => {
    const loop = CH.unwrap(T.foldCauseM_(T.chain_(Q.take(output), (_) => TK.done(_)), (maybeError) => {
      return T.as_(Q.shutdown(output), E.fold_(CS.failureOrCause(maybeError), (l) => O.fold_(l, () => CH.end(void 0), (failure) => CH.fail(failure)), (cause) => CH.failCause(cause)));
    }, (a) => T.succeed(CH.zipRight_(CH.write(a), loop))));
    return loop;
  })));
}
module.exports = __toCommonJS(asyncEffect_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  asyncEffect
});
