var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var Emit_exports = {};
__export(Emit_exports, {
  toEmit: () => toEmit
});
var CS = __toESM(require("../../../../../Cause/index.js"));
var CK = __toESM(require("../../../../../Collections/Immutable/Chunk/index.js"));
var T = __toESM(require("../../../../../Effect/index.js"));
var Ex = __toESM(require("../../../../../Exit/index.js"));
var O = __toESM(require("../../../../../Option/index.js"));
function toEmit(fn) {
  const ops = {
    chunk(as) {
      return this(T.succeed(as));
    },
    die(err) {
      return this(T.die(err));
    },
    dieMessage(message) {
      return this(T.dieMessage(message));
    },
    done(exit) {
      return this(T.done(Ex.mapBoth_(exit, (e) => O.some(e), (a) => CK.single(a))));
    },
    end() {
      return this(T.fail(O.none));
    },
    fail(e) {
      return this(T.fail(O.some(e)));
    },
    fromEffect(io) {
      return this(T.mapBoth_(io, (e) => O.some(e), (a) => CK.single(a)));
    },
    fromEffectChunk(io) {
      return this(T.mapError_(io, (e) => O.some(e)));
    },
    halt(cause) {
      return this(T.halt(CS.map_(cause, (e) => O.some(e))));
    },
    single(a) {
      return this(T.succeed(CK.single(a)));
    }
  };
  return Object.assign(fn, ops);
}
module.exports = __toCommonJS(Emit_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  toEmit
});
