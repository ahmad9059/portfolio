var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var timeoutTo_exports = {};
__export(timeoutTo_exports, {
  StreamTimeoutError: () => StreamTimeoutError,
  StreamTimeoutSymbol: () => StreamTimeoutSymbol,
  isStreamTimeoutError: () => isStreamTimeoutError,
  timeoutTo: () => timeoutTo,
  timeoutTo_: () => timeoutTo_
});
var CS = __toESM(require("../../../../Cause/index.js"));
var O = __toESM(require("../../../../Option/index.js"));
var CatchSomeCause = __toESM(require("./catchSomeCause.js"));
var TimeoutFailCause = __toESM(require("./timeoutFailCause.js"));
var _a;
const StreamTimeoutSymbol = /* @__PURE__ */ Symbol.for("@matechs/core/symbols/errors/StreamTimeout");
class StreamTimeoutError {
  constructor(message) {
    this.message = message;
    this[_a] = "StreamTimeoutError";
  }
}
_a = StreamTimeoutSymbol;
const isStreamTimeoutError = (u) => u instanceof StreamTimeoutError && u[StreamTimeoutSymbol] === "StreamTimeoutError";
function timeoutTo_(self, d, that) {
  return CatchSomeCause.catchSomeCause_(TimeoutFailCause.timeoutFailCause_(self, CS.die(new StreamTimeoutError()), d), (e) => {
    if (e._tag === "Die") {
      return O.some(that);
    }
    return O.none;
  });
}
function timeoutTo(d, that) {
  return (self) => timeoutTo_(self, d, that);
}
module.exports = __toCommonJS(timeoutTo_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  StreamTimeoutError,
  StreamTimeoutSymbol,
  isStreamTimeoutError,
  timeoutTo,
  timeoutTo_
});
