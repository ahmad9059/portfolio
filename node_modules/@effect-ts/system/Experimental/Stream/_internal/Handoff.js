var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
var Handoff_exports = {};
__export(Handoff_exports, {
  Emit: () => Emit,
  EmitTypeId: () => EmitTypeId,
  Empty: () => Empty,
  EmptyTypeId: () => EmptyTypeId,
  End: () => End,
  EndTypeId: () => EndTypeId,
  Full: () => Full,
  FullTypeId: () => FullTypeId,
  Halt: () => Halt,
  HaltTypeId: () => HaltTypeId,
  Handoff: () => Handoff,
  HandoffSignalTypeId: () => HandoffSignalTypeId,
  StateTypeId: () => StateTypeId,
  make: () => make,
  offer: () => offer,
  poll: () => poll,
  take: () => take
});
var Tp = __toESM(require("../../../Collections/Immutable/Tuple/index.js"));
var T = __toESM(require("../../../Effect/index.js"));
var import_Function = require("../../../Function/index.js");
var O = __toESM(require("../../../Option/index.js"));
var P = __toESM(require("../../../Promise/index.js"));
var Ref = __toESM(require("../../../Ref/index.js"));
class Handoff {
  constructor(ref) {
    this.ref = ref;
  }
}
function make() {
  return T.map_(T.chain_(P.make(), (p) => Ref.makeRef(new Empty(p))), (_) => new Handoff(_));
}
const StateTypeId = /* @__PURE__ */ Symbol();
const EmptyTypeId = /* @__PURE__ */ Symbol();
class Empty {
  constructor(notifyConsumer) {
    this.notifyConsumer = notifyConsumer;
    this._stateTypeId = StateTypeId;
    this._typeId = EmptyTypeId;
  }
}
const FullTypeId = /* @__PURE__ */ Symbol();
class Full {
  constructor(a, notifyConsumer) {
    this.a = a;
    this.notifyConsumer = notifyConsumer;
    this._stateTypeId = StateTypeId;
    this._typeId = FullTypeId;
  }
}
function offer(handoff, a) {
  return T.chain_(P.make(), (p) => {
    return T.flatten(Ref.modify_(handoff.ref, (s) => {
      if (s._typeId === FullTypeId) {
        return Tp.tuple(T.zipRight_(P.await(s.notifyConsumer), offer(handoff, a)), s);
      } else {
        return Tp.tuple(T.zipRight_(P.succeed_(s.notifyConsumer, void 0), P.await(p)), new Full(a, p));
      }
    }));
  });
}
function take(handoff) {
  return T.chain_(P.make(), (p) => {
    return T.flatten(Ref.modify_(handoff.ref, (s) => {
      if (s._typeId === FullTypeId) {
        return Tp.tuple(T.as_(P.succeed_(s.notifyConsumer, void 0), s.a), new Empty(p));
      } else {
        return Tp.tuple(T.zipRight_(P.await(s.notifyConsumer), take(handoff)), s);
      }
    }));
  });
}
function poll(handoff) {
  return T.chain_(P.make(), (p) => {
    return T.flatten(Ref.modify_(handoff.ref, (s) => {
      if (s._typeId === FullTypeId) {
        return Tp.tuple(T.as_(P.succeed_(s.notifyConsumer, void 0), O.some(s.a)), new Empty(p));
      } else {
        return Tp.tuple(T.succeed(O.none), s);
      }
    }));
  });
}
const HandoffSignalTypeId = /* @__PURE__ */ Symbol();
const EmitTypeId = /* @__PURE__ */ Symbol();
class Emit {
  constructor(els) {
    this.els = els;
    this._handoffSignalTypeId = HandoffSignalTypeId;
    this._typeId = EmitTypeId;
  }
}
const HaltTypeId = /* @__PURE__ */ Symbol();
class Halt {
  constructor(error) {
    this.error = error;
    this._handoffSignalTypeId = HandoffSignalTypeId;
    this._typeId = HaltTypeId;
  }
}
const EndTypeId = /* @__PURE__ */ Symbol();
class End {
  constructor(reason) {
    this.reason = reason;
    this._handoffSignalTypeId = HandoffSignalTypeId;
    this._typeId = EndTypeId;
  }
}
module.exports = __toCommonJS(Handoff_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Emit,
  EmitTypeId,
  Empty,
  EmptyTypeId,
  End,
  EndTypeId,
  Full,
  FullTypeId,
  Halt,
  HaltTypeId,
  Handoff,
  HandoffSignalTypeId,
  StateTypeId,
  make,
  offer,
  poll,
  take
});
